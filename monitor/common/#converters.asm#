						SECTION	"CODE"

*-----------------------------------------------------------
*- convert the byte in A into 2 printable hexa character
*----------------------------------------------------------- 
BYTE2HEXA				PSHS	A
						BSR		NIBBLE2HEXA
						TFR		A,B
						PULS	A
						LSRA
						LSRA
						LSRA
						LSRA
*- falltrough
*-----------------------------------------------------------
*- convert the nibble in A into a printable hexa character
*----------------------------------------------------------- 
NIBBLE2HEXA				ANDA	#$0F
						ADDA	#$90
						DAA
						ADCA    #$40
						DAA
						RTS

*-----------------------------------------------------------
*- convert the hexa digit in A into a nibble
*----------------------------------------------------------- 
HEXA2NIBBLE				CMPA	#'0'
						BLT		HEXA2NIBBLE3
						CMPA	#'9'
						BGT		HEXA2NIBBLE2
						ANDA	#$0F
						ANDCC	#$FE
						RTS
HEXA2NIBBLE2			CMPA	#'A'
						BLT		HEXA2NIBBLE3
						CMPA	#'F'
						BGT		HEXA2NIBBLE3
						SUBA	#'A'
						ADDA	#$0A
						ANDCC	#$FE	
						RTS
HEXA2NIBBLE3			ORCC	#$01
						RTS

*-----------------------------------------------------------
*- convert 2 hexa digit in D into a byte
*----------------------------------------------------------- 
HEXA2BYTE				JSR		HEXA2NIBBLE
						PSHS	A
						TFR		B,A
						JSR		HEXA2NIBBLE
						ASLA
						ASLA
						ASLA
						ASLA
						TFR		A,B
						PULS	A
						ROLB
						ROLA
						ROLB
						ROLA
						ROLB
						ROLA
						ROLB
						ROLA
						RTS

*---------------------------
* STACK:
*
* 0,1 quotient
* 2   loop counter
* 3,4 divisor
* 5,6 dividend


* Divide X by D, unsigned; return quotient in X, remainder in D.                                                                                  
DIV16   PSHS    X,B,A
        LDB     #16
        PSHS    B
        CLRA
        CLRB
        PSHS    B,A
* 0,S=16-bit quotient; 2,S=loop counter;                                                                                                          
* 3,S=16-bit divisor; 5,S=16-bit dividend

DIVIDEND				RMB 	2
QUOTIENT				RMB		2
DIVISOR					RMB		2
REMINDER				RMB		2
COUNTER					RMB		1


DIV						STX		DIVIDEND
						STD		DIVISOR
						CLR		REMINDER
						CLR		REMINDER+1
						CLR		QUOTIENT
						CLR		QUOTIENT+1



DIV16   				STX		QUOTIENT
						STD		DIVIDEND
						CLRA
						CLRB	
						STD		REMINDER
						STD		QUOTIENT
        				LDB     #16
						STB		LOOPCOUNTER
D16010  				ASL     DIVIDEND+1   
        				ROL     DIVIDEND     
        				ROL		REMINDER+1
        				ROL     REMINDER
						LDD		REMINDER

        				CMPD    DIVISOR         ;- does the divisor "fit" into D?
        				BLO     D16020          ;- if not
        				SUBD    DIVISOR
						ORCC    #1              ;- set carry
        				BRA     D16030
D16020  				ANDCC   #$FE            ;- reset carry
D16030  				ROL     QUOTIENT+1      ;- shift carry into quotient
        				ROL     QUOTIENT
				        DEC     LOOPCOUNTER     ;- another bit of the dividend to process?
        				BNE     D16010          ;- if yes
				        LDD		QUOTIENT        ;- quotient to return
        				RTS

						END

divisor	=	$58
divident = $fb
remainder = $fd
result = dividend

divide	lda #0
			

